{"name":"Yass","tagline":"Yet Another SDP Solver","body":"# [YASS](http://lxc-xx.github.io/YASS/)\r\n# Yet Another SDP Solver\r\nYASS is a Semidefinite solver using interior-point method. Currently it has two implementions using Python and C++ respectively. It is aimed to creat a lightweight and fast solver, which can be called from any device and environment.\r\n\r\n## Python implementation\r\nPython implementation is based on [Numpy](http://www.numpy.org), a popular Python numerical computing package. \r\n\r\n## C++ implementation\r\nC++ implementation is based on [Eigen] (http://eigen.tuxfamily.org/index.php?title=Main_Page), a C++ template for linear algebra. Eigen is included in the package. So YASS can be compiled does not depend on any non-standard C++ library. It is easy to compile it at any platform where a C++ compiler is available.\r\n# Usage\r\n\r\n# Speed\r\nYASS is keep evolving. At this stage, we are focused on the function development. Here is the current speed test on the sample problems from [SDPLIB](http://euler.nmt.edu/~brian/sdplib/sdplib.html). We compare it with another heavy-weight SDP solver [SDPA](http://sdpa.sourceforge.net).\r\n\r\nWe tested the YASS C++, YASS Python, SDPA on problems of SDPLIB The experiment is running on a AWS EC2 [g2.8xlarge] (https://aws.amazon.com/ec2/instance-types/) instance.\r\n\r\n| Problem  | YASS C++ | YASS Python | SDPA   |\r\n|----------|----------|-------------|--------|\r\n| truss1   | 0.524s   | 0.722s      | 0.117s |\r\n| truss4   | 3.696s   | 3.162s      | 0.066s |\r\n| truss5   | 53.484s  | 25.418s     | 1.802s |\r\n| control1 | N/A      | 1.532s      | 0.482s |\r\n| control2 | N/A      | 24.446s     | 0.665s |\r\n| control3 | N/A      | 4m46.772s   | 1.259s |\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n# Reference\r\n\r\n[1]Freund, Robert M. \"Introduction to semidefinite programming (SDP).\" Massachusetts Institute of Technology (2004).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}